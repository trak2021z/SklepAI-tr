@model ProductDetailsViewModel

@{
    Layout = "_Layout";
    ViewBag.Title = Model.Selected.Name;
}
<div class="jumbotron container">
    <p class="h5">
       Size: @Model.Selected.Size 
       Color: @Model.Selected.Colour
    </p>
    <div class="row">
        <div class="col-sm">
            <div id="carouselExampleIndicators" class="carousel carousel-dark slide" data-bs-ride="carousel">
                @{
                    var images = Model.Selected.ImgUrl?.Split(',');
                }
                <div class="carousel-indicators">
                    @for (int i = 0; i < images?.Length; i++)
                    {
                        @if (i == 0)
                        {
                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to=@i class="active" aria-current="true"></button>
                        }
                        else
                        {
                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to=@i></button>
                        }
                    }
                </div>
                <div class="carousel-inner">
                    @for (int i = 0; i < images?.Length; i++)
                    {
                        @if (i == 0)
                        {
                            <div class="carousel-item active">
                                <img src=@images[i] class="img-fluid img-thumbnail d-block w-100" />
                            </div>
                        }
                        else
                        {
                            <div class="carousel-item">
                                <img src=@images[i] class="img-fluid img-thumbnail d-block w-100" />
                            </div>
                        }
                    }
                </div>
                <a class="carousel-control-prev" role="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </a>
                <a class="carousel-control-next" role="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </a>
            </div>
        </div>
        <div class="col-sm">
            <p class="h4">Description: </p>
            <p>@Model.Selected.Description</p>
        </div>
        <div class="col-sm">
            <h3>Kolory</h3>
            <div class="row">
                @foreach (string color in Model.Products.Select(p => p.Colour).Distinct())
                {
                    var productsInColor = Model.Products.Where(p => p.Colour == color);
                    var chosenProduct = productsInColor.First();
                    foreach (var product in productsInColor)
                    {
                        if (product.Size == Model.Selected.Size)
                        {
                            chosenProduct = product;
                        }
                    }
                    <div class="col-sm">
                        <form id="@chosenProduct.ProductID" asp-action="Details" method="post">
                            <input type="hidden" name="productId" value="@chosenProduct.ProductID" />
                            <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                            <input type="submit" class="btn btn-outline-secondary" value="@color" />
                        </form>
                    </div>
                }
            </div>
            <h3>Rozmiary</h3>
            <div class="row">
                @foreach (string size in Model.Products.Select(p => p.Size).Distinct())
                {
                    var productsInSize = Model.Products.Where(p => p.Size == size);
                    var chosenProduct = productsInSize.First();
                    foreach (var product in productsInSize)
                    {
                        if (product.Colour == Model.Selected.Colour)
                        {
                            chosenProduct = product;
                        }
                    }
                    <div class="col-sm">
                        <form id="@chosenProduct.ProductID" asp-action="Details" method="post">
                            <input type="hidden" name="productId" value="@chosenProduct.ProductID" />
                            <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                            <input type="submit" class="btn btn-outline-secondary" value="@size" />
                        </form>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="row">
        <a class="row alert float-right">Dostępne @Model.Selected.Quantity sztuk.</a>
    </div>
    <form id="@Model.Selected.ProductID"
          asp-action="AddToCart"
          asp-controller="Cart"
          method="post">
        <input type="hidden" name="productId" value="@Model.Selected.ProductID" />
        <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
        @if (Model.Selected.Quantity <= 0)
        {
            <button disabled type="submit" class="btn btn-success fas fa-cart-arrow-down float-right">   @Model.Selected.Price.ToString("c")</button>
        }
        else
        {
            <button type="submit" class="btn btn-success fas fa-cart-arrow-down float-right">   @Model.Selected.Price.ToString("c")</button>
        }
    </form>

</div>
